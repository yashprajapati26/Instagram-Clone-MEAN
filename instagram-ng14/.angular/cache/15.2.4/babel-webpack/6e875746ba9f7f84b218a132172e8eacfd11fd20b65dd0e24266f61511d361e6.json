{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { environment } from 'src/environments/environment.development';\nlet FeedlistComponent = class FeedlistComponent {\n  constructor(router, feedlistservice) {\n    this.router = router;\n    this.feedlistservice = feedlistservice;\n    this.imageUrl = environment.apiURL;\n  }\n  ngOnInit() {\n    this.fatchFeed();\n    this.fatchUserDetails();\n  }\n  fatchFeed() {\n    this.feedlistservice.getFeeds().subscribe(res => {\n      console.log(res);\n      this.feeds = res['feeds'];\n    });\n  }\n  fatchUserDetails() {\n    let userId = localStorage.getItem('userId');\n    this.feedlistservice.getUserDetails(userId).subscribe(res => {\n      console.log(res);\n      this.user = res['user'];\n    });\n  }\n  fatchAllUsers() {\n    this.feedlistservice.getAllUsers().subscribe(res => {\n      this.allUsers = res['allusers'];\n    });\n  }\n  likedPost(event) {\n    let postId = event.target.id || event.srcElement.id || event.currentTarget.id;\n    let btn = document.getElementById(postId);\n    if (btn?.getAttribute(\"fill\") != \"red\") {\n      btn?.setAttribute(\"fill\", \"red\");\n    } else {\n      btn?.setAttribute(\"fill\", \"gray\");\n    }\n    let userId = localStorage.getItem('userId');\n    let data = {\n      userId: userId,\n      postId: postId\n    };\n    this.feedlistservice.likedDislikePost(data).subscribe(res => {\n      console.log(res);\n    });\n  }\n};\nFeedlistComponent = __decorate([Component({\n  selector: 'app-feedlist',\n  templateUrl: './feedlist.component.html',\n  styleUrls: ['./feedlist.component.scss']\n})], FeedlistComponent);\nexport { FeedlistComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAEzC,SAASC,WAAW,QAAQ,0CAA0C;AAQ/D,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAQ5BC,YAAoBC,MAAa,EAASC,eAA+B;IAArD,WAAM,GAAND,MAAM;IAAgB,oBAAe,GAAfC,eAAe;IALzD,aAAQ,GAAGJ,WAAW,CAACK,MAAM;EAK8C;EAE3EC,QAAQ;IACN,IAAI,CAACC,SAAS,EAAE;IAChB,IAAI,CAACC,gBAAgB,EAAE;EACzB;EAGAD,SAAS;IACP,IAAI,CAACH,eAAe,CAACK,QAAQ,EAAE,CAACC,SAAS,CAAEC,GAAO,IAAG;MACnDC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,IAAI,CAACG,KAAK,GAAGH,GAAG,CAAC,OAAO,CAAC;IAC3B,CAAC,CAAC;EACJ;EAEAH,gBAAgB;IACd,IAAIO,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC3C,IAAI,CAACb,eAAe,CAACc,cAAc,CAACH,MAAM,CAAC,CAACL,SAAS,CAAEC,GAAO,IAAG;MAC/DC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,IAAI,CAACQ,IAAI,GAAGR,GAAG,CAAC,MAAM,CAAC;IACzB,CAAC,CAAC;EACJ;EAEAS,aAAa;IACX,IAAI,CAAChB,eAAe,CAACiB,WAAW,EAAE,CAACX,SAAS,CAAEC,GAAO,IAAG;MACtD,IAAI,CAACW,QAAQ,GAAGX,GAAG,CAAC,UAAU,CAAC;IACjC,CAAC,CAAC;EACJ;EAEAY,SAAS,CAACC,KAAS;IAEjB,IAAIC,MAAM,GAAGD,KAAK,CAACE,MAAM,CAACC,EAAE,IAAIH,KAAK,CAACI,UAAU,CAACD,EAAE,IAAIH,KAAK,CAACK,aAAa,CAACF,EAAE;IAC7E,IAAIG,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAACP,MAAM,CAAC;IAEzC,IAAGK,GAAG,EAAEG,YAAY,CAAC,MAAM,CAAC,IAAE,KAAK,EAAC;MAClCH,GAAG,EAAEI,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC;KACjC,MAAI;MACHJ,GAAG,EAAEI,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC;;IAGnC,IAAInB,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC3C,IAAIkB,IAAI,GAAG;MAACpB,MAAM,EAAGA,MAAM;MAAGU,MAAM,EAAGA;IAAM,CAAC;IAE9C,IAAI,CAACrB,eAAe,CAACgC,gBAAgB,CAACD,IAAI,CAAC,CAACzB,SAAS,CAAEC,GAAO,IAAG;MAC/DC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,CAAC;EACJ;CACD;AAvDYV,iBAAiB,eAL7BF,SAAS,CAAC;EACTsC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,GACWtC,iBAAiB,CAuD7B;SAvDYA,iBAAiB","names":["Component","environment","FeedlistComponent","constructor","router","feedlistservice","apiURL","ngOnInit","fatchFeed","fatchUserDetails","getFeeds","subscribe","res","console","log","feeds","userId","localStorage","getItem","getUserDetails","user","fatchAllUsers","getAllUsers","allUsers","likedPost","event","postId","target","id","srcElement","currentTarget","btn","document","getElementById","getAttribute","setAttribute","data","likedDislikePost","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/yash.prajapati/Desktop/Node/Instagram Clone/instagram-ng14/src/app/components/feedlist/feedlist.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment.development';\nimport { FeedlistService } from './feedlist.service';\n\n@Component({\n  selector: 'app-feedlist',\n  templateUrl: './feedlist.component.html',\n  styleUrls: ['./feedlist.component.scss']\n})\nexport class FeedlistComponent {\n\n  feeds : any; \n  imageUrl = environment.apiURL\n  user: any;\n  allUsers:any\n\n\n  constructor(private router:Router,private feedlistservice:FeedlistService){}\n\n  ngOnInit(){\n    this.fatchFeed();\n    this.fatchUserDetails();\n  }\n\n\n  fatchFeed(){\n    this.feedlistservice.getFeeds().subscribe((res:any)=>{\n      console.log(res)\n      this.feeds = res['feeds']\n    })\n  } \n\n  fatchUserDetails(){\n    let userId = localStorage.getItem('userId')\n    this.feedlistservice.getUserDetails(userId).subscribe((res:any)=>{\n      console.log(res)\n      this.user = res['user']\n    })\n  }\n\n  fatchAllUsers(){\n    this.feedlistservice.getAllUsers().subscribe((res:any)=>{\n      this.allUsers = res['allusers']\n    })\n  }\n\n  likedPost(event:any){\n    \n    let postId = event.target.id || event.srcElement.id || event.currentTarget.id;\n    let btn = document.getElementById(postId);\n\n    if(btn?.getAttribute(\"fill\")!=\"red\"){\n      btn?.setAttribute(\"fill\", \"red\")\n    }else{\n      btn?.setAttribute(\"fill\", \"gray\")\n    }\n    \n    let userId = localStorage.getItem('userId')\n    let data = {userId : userId , postId : postId}\n    \n    this.feedlistservice.likedDislikePost(data).subscribe((res:any)=>{\n      console.log(res)     \n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}