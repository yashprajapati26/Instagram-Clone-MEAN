{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { environment } from 'src/environments/environment.development';\nlet AddCommentComponent = class AddCommentComponent {\n  constructor(postservice, activateRoute, authservice) {\n    this.postservice = postservice;\n    this.activateRoute = activateRoute;\n    this.authservice = authservice;\n    this.imageUrl = environment.apiURL;\n  }\n  ngOnInit() {\n    let postId = this.activateRoute.snapshot.params['id'];\n    this.fatchPost(postId);\n    this.fatchLoginUserDetails();\n  }\n  fatchPost(postId) {\n    this.postservice.getPostDetails(postId).subscribe(res => {\n      console.log(res);\n      this.post = res['post'];\n    });\n  }\n  fatchLoginUserDetails() {\n    // let token = localStorage.getItem(\"AUTH_TOKEN\") || \"\"\n    // try {\n    //   this.decodedToken = jwt_decode(token);\n    //   console.log(this.decodedToken)\n    // } catch (Error) {\n    //   console.log(\"token not found\")\n    // } \n    this.authservice.getUserDetails(userId).subscribe(res => {});\n  }\n};\nAddCommentComponent = __decorate([Component({\n  selector: 'app-add-comment',\n  templateUrl: './add-comment.component.html',\n  styleUrls: ['./add-comment.component.scss']\n})], AddCommentComponent);\nexport { AddCommentComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAEzC,SAASC,WAAW,QAAQ,0CAA0C;AAU/D,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAM9BC,YAAoBC,WAAuB,EAAUC,aAA4B,EAAUC,WAAuB;IAA9F,gBAAW,GAAXF,WAAW;IAAsB,kBAAa,GAAbC,aAAa;IAAyB,gBAAW,GAAXC,WAAW;IAHtG,aAAQ,GAAGL,WAAW,CAACM,MAAM;EAGuF;EAEpHC,QAAQ;IACN,IAAIC,MAAM,GAAG,IAAI,CAACJ,aAAa,CAACK,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IACrD,IAAI,CAACC,SAAS,CAACH,MAAM,CAAC;IACtB,IAAI,CAACI,qBAAqB,EAAE;EAC9B;EAEAD,SAAS,CAACH,MAAU;IAClB,IAAI,CAACL,WAAW,CAACU,cAAc,CAACL,MAAM,CAAC,CAACM,SAAS,CAAEC,GAAO,IAAG;MAC3DC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAE;MACjB,IAAI,CAACG,IAAI,GAAGH,GAAG,CAAC,MAAM,CAAC;IACzB,CAAC,CAAC;EACJ;EAEAH,qBAAqB;IACnB;IACA;IACA;IACA;IACA;IACA;IACA;IAEA,IAAI,CAACP,WAAW,CAACc,cAAc,CAACC,MAAM,CAAC,CAACN,SAAS,CAAEC,GAAO,IAAG,CAE7D,CAAC,CAAC;EACJ;CAGD;AApCYd,mBAAmB,eAL/BF,SAAS,CAAC;EACTsB,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,GACWtB,mBAAmB,CAoC/B;SApCYA,mBAAmB","names":["Component","environment","AddCommentComponent","constructor","postservice","activateRoute","authservice","apiURL","ngOnInit","postId","snapshot","params","fatchPost","fatchLoginUserDetails","getPostDetails","subscribe","res","console","log","post","getUserDetails","userId","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/yash.prajapati/Desktop/Node/Instagram Clone/instagram-ng14/src/app/components/posts/add-comment/add-comment.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { environment } from 'src/environments/environment.development';\nimport { PostService } from '../post.service';\nimport jwt_decode from 'jwt-decode';\nimport { AuthService } from '../../auth/';\n\n@Component({\n  selector: 'app-add-comment',\n  templateUrl: './add-comment.component.html',\n  styleUrls: ['./add-comment.component.scss']\n})\nexport class AddCommentComponent {\n\n  post:any\n  imageUrl = environment.apiURL\n  decodedToken:any\n\n  constructor(private postservice:PostService, private activateRoute:ActivatedRoute, private authservice:AuthService){}\n\n  ngOnInit(){\n    let postId = this.activateRoute.snapshot.params['id']\n    this.fatchPost(postId)\n    this.fatchLoginUserDetails()\n  }\n\n  fatchPost(postId:any){\n    this.postservice.getPostDetails(postId).subscribe((res:any)=>{\n      console.log(res )\n      this.post = res['post']\n    })\n  }\n\n  fatchLoginUserDetails():void{\n    // let token = localStorage.getItem(\"AUTH_TOKEN\") || \"\"\n    // try {\n    //   this.decodedToken = jwt_decode(token);\n    //   console.log(this.decodedToken)\n    // } catch (Error) {\n    //   console.log(\"token not found\")\n    // } \n\n    this.authservice.getUserDetails(userId).subscribe((res:any)=>{\n\n    })\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}