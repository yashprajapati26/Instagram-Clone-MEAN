{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet SignupComponent = class SignupComponent {\n  // mobileFormat = '(000)000-0000';\n  // emailPattern = '^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$';\n  constructor(router, authservice) {\n    this.router = router;\n    this.authservice = authservice;\n    this.signupForm = new FormGroup({\n      firstname: new FormControl(\"\", Validators.required),\n      lastname: new FormControl(\"\", Validators.required),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      mobile: new FormControl('', [Validators.required, Validators.minLength(10), Validators.maxLength(10), Validators.pattern(\"^[0-9]*$\")]),\n      password: new FormControl('', [Validators.required, Validators.pattern(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$\")])\n    });\n    this.submitted = false;\n  }\n  signup(data) {\n    this.submitted = true;\n    console.log(data);\n    this.authservice.doLogin(data).subscribe(res => {\n      if (res) this.router.navigate(['profile']);\n    });\n  }\n  login() {\n    this.router.navigate(['login']);\n  }\n  togglePassword(event) {\n    console.log(\"called\", event);\n  }\n};\nSignupComponent = __decorate([Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})], SignupComponent);\nexport { SignupComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAS5D,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAW1B;EACA;EAEAC,YAAoBC,MAAa,EAAUC,WAAuB;IAA9C,WAAM,GAAND,MAAM;IAAiB,gBAAW,GAAXC,WAAW;IAZtD,eAAU,GAAG,IAAIL,SAAS,CAAC;MACzBM,SAAS,EAAG,IAAIP,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACM,QAAQ,CAAC;MACpDC,QAAQ,EAAG,IAAIT,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACM,QAAQ,CAAC;MACnDE,KAAK,EAAE,IAAIV,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACM,QAAQ,EAAEN,UAAU,CAACQ,KAAK,CAAC,CAAC;MACnEC,MAAM,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACM,QAAQ,EAAEN,UAAU,CAACU,SAAS,CAAC,EAAE,CAAC,EAACV,UAAU,CAACW,SAAS,CAAC,EAAE,CAAC,EAAEX,UAAU,CAACY,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;MACrIC,QAAQ,EAAE,IAAIf,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACM,QAAQ,EAAEN,UAAU,CAACY,OAAO,CAAC,gEAAgE,CAAC,CAAC;KAC1I,CAAC;IACF,cAAS,GAAG,KAAK;EAKmD;EAEpEE,MAAM,CAACC,IAAW;IAChB,IAAI,CAACC,SAAS,GAAG,IAAI;IACrBC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACjB,IAAI,CAACX,WAAW,CAACe,OAAO,CAACJ,IAAI,CAAC,CAACK,SAAS,CAAEC,GAAO,IAAG;MAClD,IAAGA,GAAG,EAAE,IAAI,CAAClB,MAAM,CAACmB,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;IAC3C,CAAC,CAAC;EACJ;EAEAC,KAAK;IACH,IAAI,CAACpB,MAAM,CAACmB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EACjC;EAEAE,cAAc,CAACC,KAAS;IACtBR,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACO,KAAK,CAAC;EAC7B;CAED;AAhCYxB,eAAe,eAL3BJ,SAAS,CAAC;EACT6B,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,GACW3B,eAAe,CAgC3B;SAhCYA,eAAe","names":["Component","FormControl","FormGroup","Validators","SignupComponent","constructor","router","authservice","firstname","required","lastname","email","mobile","minLength","maxLength","pattern","password","signup","data","submitted","console","log","doLogin","subscribe","res","navigate","login","togglePassword","event","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/yash.prajapati/Desktop/Node/Instagram Clone/instagram-ng14/src/app/components/auth/signup/signup.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Route, Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent {\n\n  signupForm = new FormGroup({\n    firstname : new FormControl(\"\", Validators.required),\n    lastname : new FormControl(\"\", Validators.required),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    mobile: new FormControl('', [Validators.required, Validators.minLength(10),Validators.maxLength(10), Validators.pattern(\"^[0-9]*$\")]),\n    password: new FormControl('', [Validators.required, Validators.pattern(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$\")])\n  })\n  submitted = false\n\n  // mobileFormat = '(000)000-0000';\n  // emailPattern = '^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$';\n\n  constructor(private router:Router, private authservice:AuthService){}\n\n  signup(data:object){\n    this.submitted = true\n    console.log(data)\n    this.authservice.doLogin(data).subscribe((res:any)=>{\n      if(res) this.router.navigate(['profile']);\n    })\n  }\n\n  login(){\n    this.router.navigate(['login'])\n  }\n\n  togglePassword(event:any){\n    console.log(\"called\",event)\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}