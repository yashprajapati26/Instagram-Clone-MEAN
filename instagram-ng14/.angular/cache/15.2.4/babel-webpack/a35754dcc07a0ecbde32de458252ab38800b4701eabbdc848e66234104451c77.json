{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  doLogin(data) {\n    let url = environment.apiURL + \"/login\";\n    return this.http.post(url, data);\n  }\n  doSignup(data) {\n    let url = environment.apiURL + \"/signup\";\n    return this.http.post(url, data);\n  }\n  doOtpVerify(data) {\n    let url = environment.apiURL + \"/otpverify\";\n    return this.http.post(url, data);\n  }\n  getUserDetails(data) {\n    let url = environment.apiURL + \"/userdetails\";\n    return;\n  }\n  // token services \n  saveToken(token) {\n    localStorage.setItem('AUTH_TOKEN', token);\n  }\n  removeToken() {\n    localStorage.removeItem('AUTH_TOKEN');\n  }\n  getToken() {\n    if (localStorage.getItem('AUTH_TOKEN')) {\n      return localStorage.getItem('AUTH_TOKEN');\n    }\n    return null;\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,QAAQ,8BAA8B;;;AAK1D,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;EAAe;EAGvCC,OAAO,CAACC,IAAW;IACjB,IAAIC,GAAG,GAAGN,WAAW,CAACO,MAAM,GAAG,QAAQ;IACvC,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAACF,GAAG,EAACD,IAAI,CAAC;EACjC;EAEAI,QAAQ,CAACJ,IAAW;IAClB,IAAIC,GAAG,GAAGN,WAAW,CAACO,MAAM,GAAG,SAAS;IACxC,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAACF,GAAG,EAACD,IAAI,CAAC;EACjC;EAEAK,WAAW,CAACL,IAAQ;IAClB,IAAIC,GAAG,GAAGN,WAAW,CAACO,MAAM,GAAE,YAAY;IAC1C,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAACF,GAAG,EAACD,IAAI,CAAC;EACjC;EAEAM,cAAc,CAACN,IAAQ;IACrB,IAAIC,GAAG,GAAGN,WAAW,CAACO,MAAM,GAAG,cAAc;IAC7C;EACF;EAGA;EAEAK,SAAS,CAACC,KAAY;IACpBC,YAAY,CAACC,OAAO,CAAC,YAAY,EAACF,KAAK,CAAC;EAC1C;EAEAG,WAAW;IACTF,YAAY,CAACG,UAAU,CAAC,YAAY,CAAC;EACvC;EAEAC,QAAQ;IACN,IAAIJ,YAAY,CAACK,OAAO,CAAC,YAAY,CAAC,EAAE;MACtC,OAAOL,YAAY,CAACK,OAAO,CAAC,YAAY,CAAC;;IAE3C,OAAO,IAAI;EACb;;AAzCWlB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAmB,SAAXnB,WAAW;EAAAoB,YAFV;AAAM","names":["environment","AuthService","constructor","http","doLogin","data","url","apiURL","post","doSignup","doOtpVerify","getUserDetails","saveToken","token","localStorage","setItem","removeToken","removeItem","getToken","getItem","factory","providedIn"],"sourceRoot":"","sources":["/home/yash.prajapati/Desktop/Node/Instagram Clone/instagram-ng14/src/app/components/auth/auth.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http:HttpClient) { }\n\n\n  doLogin(data:object):Observable<any>{\n    let url = environment.apiURL + \"/login\"\n    return this.http.post(url,data)\n  }\n  \n  doSignup(data:object):Observable<any>{\n    let url = environment.apiURL + \"/signup\"\n    return this.http.post(url,data)\n  }\n\n  doOtpVerify(data:any):Observable<any>{\n    let url = environment.apiURL +\"/otpverify\"\n    return this.http.post(url,data)\n  }\n\n  getUserDetails(data:any){\n    let url = environment.apiURL + \"/userdetails\"\n    return \n  }\n\n\n  // token services \n\n  saveToken(token:string){\n    localStorage.setItem('AUTH_TOKEN',token)\n  }\n\n  removeToken(): void {\n    localStorage.removeItem('AUTH_TOKEN');\n  }\n\n  getToken(): string | null {\n    if (localStorage.getItem('AUTH_TOKEN')) {\n      return localStorage.getItem('AUTH_TOKEN');\n    }\n    return null;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}